newTA
=====

描述
    在chart-Series生成的图形上创建指标或绘制内容的辅助函数

用法
::

    addTA(ta,
        order = NULL,
        on = NA,
        legend = "auto",
        yrange = NULL,
        ...)

    newTA(FUN,
        preFUN,
        postFUN,
        on = NA,
        yrange = NULL,
        legend.name,
        fdots = TRUE,
        cdots = TRUE,
        data.at = 1,
        ...)

参数
    :ta:            要绘图的数据
    :order:         哪些列（如果>1）要绘出？
    :legend:        添加到图表上的图例
    :FUN:           主过滤函数名 - 作为符号
    :preFUN:        预过滤转换或抽取函数
    :postFUN:       后过滤转换或抽取函数
    :on:            画在哪里
    :yrange:        y轴范围 - 长度为2的向量
    :legend.name:   可选图例页头，否则自动生成
    :fdots:         调用主过滤函数是否包括...
    :cdots:         所生成的函数对象是否应包括...？fdots=TRUE将此参数重写为TRUE
    :data.at:       主过滤函数的哪个参数是关乎数据的
    :...:           任何要包含的额外的图形参数/缺省值

详细
    addTA和newTA可被用于为显示图表动态添加定制内容。addTA取一系列可强制转换为xts或与绘制序列同样长度的值，将结果显示在新TA子窗口或
    叠加在主价格图表之上/之下。如果该对象可被强制转换为xts，时间值只能在原来序列的时间范围内。内部会合并日期且允许绘制非连续序列。

    order参数允许多列数据以一定顺序画图，从而达到最好的视觉效果。

    指定图例将覆盖addTA为子图提供的标题，指定该项将导致不打印最后一个值。...参数用于线条可用的图形参数。

    newTA更多是作为一个骨架函数使用，把函数作为参数（形参）以及绘图参数（实参），
    并返回一个可以与addRSI和addMACD等内置TA工具同样方式调用的函数。本质上，
    它是一个允许以最少的（可能是零）代码高度定制绘图工具的动态代码生成器。也可以修改所生成的代码来进一步改变其行为。

    用newTA来创建新的TA函数某些参数必须指定。

    FUN参数是一个用于chartSeries图表核心数据首要过滤器的函数符号（或可强制转换成这种），就像TTR包中的大多数函数，如RSI或EMA。
    该函数调用产生的对象等同于在传递给创建该图表的chartSeries函数的原始数据之上调用函数，其输出的一列或多列应该可以被强制转换成一个matrix对象。
    缺省地，输出的所有列将被添加到图表上，除非通过以...参数传递合适的位置类型type=n来阻止。注意，这不会阻止标签添加到图表。

    preFUN参数在传递给FUN之前先作用在主要图表数据上，它必须是一个函数符号或要调用的函数的名字字符串。

    postFUN参数作用于FUN过滤器返回的数据之上，它对于从返回的过滤数据中抽取相关数据很有用。类似preFUN，
    它也必须是一个函数符号或要调用的函数的名字字符串。

    yrange参数用于提供一个定制的y轴坐标刻度，如果是NULL，则要画图数据的最小和最大值将作为y轴范围。

    on参数指定哪个子图表要加到图形上。缺省地，on=NA将在最后一个技术指标的下方绘制序列。将该参数设为正/负值分别将序列指定为上/下子图表。
    目前仅支持值为1，代表在主图表上。

    legend.name改变新图的主图例。

    fdots和cdots分别使所生成调用FUN的TA程序代码或新TA函数的参数列表中包含或阻止 ``...`` 参数。为了让用户指定的参数更好用，
    最好不要约束可用参数的类型，避免把人为限制强加给最终用户。缺省地，新TA函数将包含...参数，内部FUN调用将保持所有参数，包括 ``...`` 。
    如果内部函数把哪些...又传给一个不能处理它们的函数，可能会引起问题。

    最后一个参数是data.at，它指定传递给FUN函数的数据在参数列表中的位置。默认是比较敏感的第一个位置，
    但是可以在创建时该参数设为期望的值来修改。

    尽管在图形上构造令人满意的图表附加物通常上述函数就足够了，但有时候可能也需要手工修改生成的代码。
    这可以通过将函数转存为文件或在交互模式下使用fix来实现。

    另一个关于newTA需要注意的是主要图例标签的命名。默认遵从addTA的约定，把函数名前面的“add”去掉，余下的部分作为标签。
    这可以通过在构建新的TA调用时指定legend.name，或者传递图例给新TA函数时覆盖重写。两者有微妙不易察觉的差别，建议用第一张方案。

    尽管两个函数都可以用于构建新的技术指标而无需理解任何chartSeries处理流程，
    但是也许对于在更复杂情况下了解通过chartSeries创建新图表的多个步骤流程还有用的。

返回值
    addTA将静默地返回一个chobTA类的S4对象。如果该函数被交互式调用，该chobTA对象将被解析并添加到当前图表。

    newTA将返回一个或者被赋值或者被解析的函数对象。解析该函数将遵循任何addTA风格调用的罗辑，静默返回一个chobTA对象，或添加到图表。

备注
    两个接口都意味着促使定制图表附加物变得更容易。addTA是为给图表增加任意序列，而newTA与基础序列和主图表对象一起工作。
    后者也扮演一个动态TA骨架生成工具的角色，帮助开发可重用TA生成代码用于任意图表。

另见
    chartSeries TA chob chobTA

范例
::

    ## Not run:

    getSymbols( SBUX )
    barChart(SBUX)
    addTA(EMA(Cl(SBUX)), on=1, col=6)
    addTA(OpCl(SBUX), col=4, type= b , lwd=2)

    # create new EMA TA function
    newEMA <- newTA(EMA, Cl, on=1, col=7)
    newEMA()
    newEMA(on=NA, col=5)

    ## End(Not run)

